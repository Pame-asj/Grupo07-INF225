# Generated by Django 5.2 on 2025-06-13 21:19

from django.db import migrations

def cargar_preguntas(apps, schema_editor):
    Tema = apps.get_model('AutoridadDocente', 'Tema')
    Pregunta = apps.get_model('AutoridadDocente', 'Pregunta')

    # Crear temas si no existen
    numeros, _ = Tema.objects.get_or_create(nombre="Números")
    algebra, _ = Tema.objects.get_or_create(nombre="Álgebra y Funciones")
    geometria, _ = Tema.objects.get_or_create(nombre="Geometría")
    estadistica, _ = Tema.objects.get_or_create(nombre="Probabilidad y Estadística")

    preguntas = [
        {
            "enunciado": "¿Cuál es el valor de x si 3x - 5 = 16?",
            "opciones": {"A": "5", "B": "6", "C": "7", "D": "8"},
            "respuesta": "C",
            "temas": [numeros]
        },
        {
            "enunciado": "¿Cuál es el valor de x si x² - 4x + 3 = 0?",
            "opciones": {"A": "1", "B": "3", "C": "1 y 3", "D": "2"},
            "respuesta": "C",
            "temas": [algebra]
        },
        {
            "enunciado": "Un triángulo tiene lados de 3 cm, 4 cm y 5 cm. ¿Es un triángulo rectángulo?",
            "opciones": {"A": "Sí", "B": "No", "C": "Depende del ángulo", "D": "No se puede determinar"},
            "respuesta": "A",
            "temas": [geometria]
        },
        {
            "enunciado": "¿Cuál es la probabilidad de obtener un número par al lanzar un dado?",
            "opciones": {"A": "1/2", "B": "1/3", "C": "2/3", "D": "1/6"},
            "respuesta": "A",
            "temas": [estadistica]
        },
        {
            "enunciado": "¿Cuál es el valor de 2 + 2?",
            "opciones": {"A": "3", "B": "4", "C": "5", "D": "6"},
            "respuesta": "B",
            "temas": [numeros]
        },
    ]

    for p in preguntas:
        pregunta, creada = Pregunta.objects.get_or_create(
            enunciado=p["enunciado"],
            defaults={"opciones": p["opciones"], "respuesta_correcta": p["respuesta"]}
        )
        if creada:
            for tema in p["temas"]:
                pregunta.temas.add(tema)

class Migration(migrations.Migration):

    dependencies = [
        ('AutoridadDocente', '0002_alter_ensayo_nivel'),
    ]

    operations = [
        migrations.RunPython(cargar_preguntas),
    ]
